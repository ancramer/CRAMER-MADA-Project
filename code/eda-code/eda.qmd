---
title: "Data-Cleaning"
---

To start, I'll load packages. As I need packages along the way, I'll return here and add them.
```{r}
library(tidyverse)
library(gt)
library(webshot2)
library(here)
```

Now, loading data using the here package.
```{r}
here() #set working directory
data <- readRDS(here("data","processed-data", "data3.rds"))
```

Now, I will make plots to explore how these look to ensure there's no problems. I used ChatGPT to help make the table. Each row doesn't add up to 1, this is because the yes/no adds up to 1, and the NA and not NA adds up to 1. Notably, some of these vairables have high NA porportions, but I can't remove them from the set because that would affect the survey design variables, but I will keep it in mind for the rest of the analysis should there be any issues such as singleton strata variables, lower than expected estimates, etc.
```{r}
hist(data$SLEEP) #histograms of 0 and 1 for each variable
hist(data$EXERCISE)
hist(data$DEPRESSED)
hist(data$TROUBLE_SLEEPING)
hist(data$SOCIAL)
hist(data$COVID)
```

```{r}
#summarize EXERCISE
summary_exercise <- data %>%
  summarise(
    Variable = "EXERCISE",
    Prop_1 = mean(EXERCISE == 1, na.rm = TRUE),
    Prop_0 = mean(EXERCISE == 0, na.rm = TRUE),
    Prop_NA = mean(is.na(EXERCISE))
  )

#summarize SLEEP
summary_sleep <- data %>%
  summarise(
    Variable = "SLEEP",
    Prop_1 = mean(SLEEP == 1, na.rm = TRUE),
    Prop_0 = mean(SLEEP == 0, na.rm = TRUE),
    Prop_NA = mean(is.na(SLEEP))
  )

#summarize DEPRESSED
summary_depressed <- data %>%
  summarise(
    Variable = "DEPRESSED",
    Prop_1 = mean(DEPRESSED == 1, na.rm = TRUE),
    Prop_0 = mean(DEPRESSED == 0, na.rm = TRUE),
    Prop_NA = mean(is.na(DEPRESSED))
  )

#summarize TROUBLE SLEEPING
summary_trouble_sleeping <- data %>%
  summarise(
    Variable = "TROUBLE SLEEPING",
    Prop_1 = mean(TROUBLE_SLEEPING == 1, na.rm = TRUE),
    Prop_0 = mean(TROUBLE_SLEEPING == 0, na.rm = TRUE),
    Prop_NA = mean(is.na(TROUBLE_SLEEPING))
  )

#summarize SOCIAL
summary_social <- data %>%
  summarise(
    Variable = "SOCIAL",
    Prop_1 = mean(SOCIAL == 1, na.rm = TRUE),
    Prop_0 = mean(SOCIAL == 0, na.rm = TRUE),
    Prop_NA = mean(is.na(SOCIAL))
  )

#summarize COVID
summary_covid <- data %>%
  summarise(
    Variable = "COVID",
    Prop_1 = mean(COVID == 1, na.rm = TRUE),
    Prop_0 = mean(COVID == 0, na.rm = TRUE),
    Prop_NA = mean(is.na(COVID))
  )

#combine all summaries and convert to gt table
summary_table <- bind_rows(
  summary_exercise, 
  summary_sleep, 
  summary_depressed, 
  summary_trouble_sleeping, 
  summary_social, 
  summary_covid
) %>%
  gt() %>%
  tab_header(
    title = "Proportions of 1, 0, and NA for Various Variables"
  )

#print the combined table
summary_table

#save the table as a PNG image
gtsave(summary_table, here("results", "figures", "summary_table_with_nas.png"))
```
Now, let's make a table of the proportions of answers for each of our variables. 
```{r}
#list variables
varstable1 = c("EXERCISE", "SLEEP", "DEPRESSED", "TROUBLE_SLEEPING", 
             "SOCIAL", "COVID")

#list categories
cat_vartab1 = c("EXERCISE", "SLEEP", "DEPRESSED", "TROUBLE_SLEEPING", 
             "SOCIAL", "COVID")

#use function to make table
Tab1 = CreateTableOne(vars = varstable1, factorVars = cat_vartab1, data = data)

#print and summarize
print(Tab1, showAllLevels = TRUE)
summary(Tab1)

# Convert the TableOne object to a data frame
tab1_df <- as.data.frame(print(Tab1, showAllLevels = TRUE, quote = FALSE, noSpaces = TRUE))

# Clean up row names
tab1_df <- tibble::rownames_to_column(tab1_df, "Variable")
```


That's a helpful table, let's turn that into a figure. I used ClaudeAI to help with this code.
```{r}
# More advanced formatting
tab1_gt <- gt(tab1_df) %>%
  # Add a title
  tab_header(
    title = md("**COVID test status and Mental Health Factors**"),
    subtitle = "Survey Results Summary"
  ) %>%
  # Format the columns
  fmt_percent(
    columns = contains("%"),
    decimals = 1
  ) %>%
  # Group the variables
  tab_row_group(
    label = "COVID Status",
    rows = contains("COVID")
  ) %>%
  tab_row_group(
    label = "Mental Health Indicators",
    rows = contains(c("DEPRESSED", "TROUBLE_SLEEPING"))
  ) %>%
  tab_row_group(
    label = "Lifestyle Factors",
    rows = contains(c("EXERCISE", "SLEEP", "SOCIAL"))
  ) %>%
  # Style the table
  tab_style(
    style = cell_fill(color = "#e6f3ff"),
    locations = cells_row_groups()
  ) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_row_groups()
  ) %>%
  # Add footnotes if needed
  tab_footnote(
    footnote = "Percentages may not sum to 100% due to rounding",
    locations = cells_column_labels(columns = contains("%"))
  ) %>%
  # Adjust column widths
  cols_width(
    Variable ~ px(250),
    everything() ~ px(120)
  )

tab1_gt

# Save the table as a PNG
here()
gtsave(tab1_gt, here("results", "figures", "table1.png"))
```

